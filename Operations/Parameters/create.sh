#!/usr/bin/env bash

set -e

# Create the runtime parameters for execution

function CLEANUP {

    ## Remove any temporary environment file
    if ! rm .env.tmp.* 2>/dev/null; then
        :
    fi

}

trap CLEANUP QUIT
trap CLEANUP HUP
trap CLEANUP TERM

## Move to rootdir
cd "$(git rev-parse --show-toplevel)" || exit 1

## Load terminal helpers
# shellcheck disable=SC1091
. ./Library/Software/Terminal/bootstrap.sh

## Create a temporary environment file
CLEANUP
TEMPORARY=$(mktemp .env.tmp.XXXXX)

if ! touch "$TEMPORARY"; then
    FATAL "Unable to create temporary file '$TEMPORARY'."
    exit 1
fi

## Create the file header

(
    cat <<EOF
# ==============================================================
# Runtime Parameters
# This file was generated automatically, do not edit manually
# ==============================================================

# Generated by '$(realpath "$0")' on '$(date --rfc-email)'

EOF
) >"$TEMPORARY"

## Execute system parameters generators

INFO "Generating parameters:"

for GENERATOR in Parameters/environment/*.sh; do

    if [ ! -f "$GENERATOR" ]; then
        continue
    fi

    INFO "- '$GENERATOR'"

    ## Ensure can execute the generator
    if [ ! -x "$GENERATOR" ]; then
        chmod +x "$GENERATOR"
    fi

    {
        printf "%s\n" "# --------------------------------------------------------------"
        printf "# Section generated from '%s'\n" "$GENERATOR"
        printf "%s\n" "# --------------------------------------------------------------"
    } >>"$TEMPORARY"

    if ! "$GENERATOR" >>"$TEMPORARY"; then

        FATAL "Failed to execute generator '$GENERATOR'."
        exit 1

    fi
    printf "\n" >>"$TEMPORARY"

done

## Load parameters

INFO "Loading parameters:"

for FILE in Parameters/environment/*.env; do

    if [ ! -f "$FILE" ]; then
        continue
    fi

    {
        printf "%s\n" "# --------------------------------------------------------------"
        printf "# Section loaded from '%s'\n" "$GENERATOR"
        printf "%s\n" "# --------------------------------------------------------------"
    } >>"$TEMPORARY"

    INFO "- '$FILE'"

    cat "$FILE" >>"$TEMPORARY"
    printf "\n" >>"$TEMPORARY"

done

## Load Custom environment configuration

INFO "Appending custom environment configuration"

if [ -f .env.custom ]; then
    printf "\n\n" >>"$TEMPORARY"
    cat .env.custom >>"$TEMPORARY"
fi

## Replace the '.env' file with the generated file

cat "$TEMPORARY" >.env

CLEANUP

FINISHED "Parameters generated"
